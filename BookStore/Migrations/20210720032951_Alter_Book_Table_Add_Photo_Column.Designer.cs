// <auto-generated />
using BookStore.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookStore.Migrations
{
    [DbContext(typeof(BookStoreDBContext))]
    [Migration("20210720032951_Alter_Book_Table_Add_Photo_Column")]
    partial class Alter_Book_Table_Add_Photo_Column
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BookStore.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<string>("BookName")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(1000)")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(300)")
                        .HasMaxLength(300);

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("PublishYear")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Authors = "Nam Thư",
                            BookName = "Doraemon",
                            CategoryId = 4,
                            Description = "Truyện về chú mèo máy Doraemon",
                            IsDeleted = false,
                            Photo = "images/no-photo.jpg",
                            Price = 10000,
                            PublishYear = 2000
                        },
                        new
                        {
                            BookId = 2,
                            Authors = "Bửu Ngọc",
                            BookName = "Tiếng Anh 12",
                            CategoryId = 2,
                            Description = "Sách giáo khoa Tiếng Anh",
                            IsDeleted = false,
                            Photo = "images/no-photo.jpg",
                            Price = 12000,
                            PublishYear = 2000
                        });
                });

            modelBuilder.Entity("BookStore.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CatygoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(250)")
                        .HasMaxLength(250);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CatygoryName = "Khoa học viễn tưởng",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 2,
                            CatygoryName = "Giáo khoa",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 3,
                            CatygoryName = "Tham khảo",
                            IsDeleted = false
                        },
                        new
                        {
                            CategoryId = 4,
                            CatygoryName = "Truyện tranh",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("BookStore.Entities.Book", b =>
                {
                    b.HasOne("BookStore.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
